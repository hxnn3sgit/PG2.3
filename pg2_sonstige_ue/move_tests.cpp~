#include <iostream>
#include <vector>

int strlen(char *chars);

using namespace std;

class my_string {
private:
	char *data;
	int len;
public:
	my_string(char *string_data) : data(new char[strlen(string_data)+1]), len(strlen(data)+1) {
		for (int i = 0; i < len; ++i)
			data[i] = string_data[i];
		data[len] = '\0';
	}
	my_string(const my_string &other) {
		my_string new_str = new my_string[other.len];
		for (int i = 0; i < other.len; ++i)
			new_str[i] = other[i];

		new_str[len] = '\0';
		data = new_str;
	}
	~my_string() { delete [] data; len = 0; }

	int length() { return len; }
	friend ostream& operator<<(ostream &out, const my_string &other);
	char operator[](int index) const;
};

ostream& my_string::operator<<(ostream &out, const my_string &other) {
	out << "'";
	for (int i = 0; i < len; ++i)
		out << data[i];
	out << "'";
	return out;
}

char my_string::operator[](int index) const { return data[index]; }

int main() {
	my_string name("Hannes");
	cout << name << endl;;

	return 0;
}

int strlen(char *chars) {
	cout << __PRETTY_FUNCTION__ << endl;
	int counter = 0;
	while (chars[counter] != '\0') { counter++; }
	
	cout << counter << endl;
	return counter;
}
